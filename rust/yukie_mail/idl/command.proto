syntax = "proto3";
package command;
import "mail_base.proto";

// // 网络连接时使用协议
// enum ConnectProtocol {
//   none = 0; // 不使用任何加密协议
//   tls = 1;
//   starttls = 2;
// }

// 登陆时使用方法
enum LoginType {
  password = 0;
  auth = 1;
}

// 请求更新服务账号请求
message UpdateAccountRequest { mail_base.Account account = 1; }

// 请求更新服务账号答应
message UpdateAccountResponse {}

message GetAccountRequest { bool need_refresh = 1; }

message GetAccountResponse { mail_base.Account account = 1; }

// 邮件发送请求
message SendMailRequest {
  string subject = 1;
  mail_base.MailAddress from = 2;
  repeated mail_base.MailAddress to = 3;
  repeated mail_base.MailAddress cc = 4;
  repeated mail_base.MailAddress bcc = 5;
  string body = 6;
  int64 deliver_time = 7; // 预计发送邮件的时间戳，如果为0则代表无需定时发送
}

// 发送邮件答应
message SendMailRespone {}

message GetMailListRequest {
  string label = 1;
  string last_uid = 2;
}

message MessageInfo {
  string id = 1;
  string reply_to_id = 2;
  string subject = 3;
  mail_base.MailAddress from = 4;
  repeated mail_base.MailAddress to = 5;
  repeated mail_base.MailAddress cc = 6;
  repeated mail_base.MailAddress bcc = 7;
  int64 create_time = 8;
  string summary = 9;
  bool flaged = 10;
}

message GetMailListResponse {
  int32 message_count = 1;
  string last_uid = 2;
  repeated MessageInfo message_info = 3;
  bool has_more = 4;
}

message GetMailMessageRequest {
  repeated string message_id = 1;
  string label = 2;
}

message MessageFull {
  string id = 1;
  MessageInfo message_info = 2;
  string body = 3;
  repeated string labels = 4;
}
message GetMailMessageResponse { repeated MessageFull message_full = 1; }

message UpdateMailMessageRequest {
  repeated string ids = 1;
  string add_label = 2;
  string remove_label = 3;
  bool is_move = 4;
}
message UpdateMailMessageResponse {}

message DeleteMailMessageRequest { repeated string ids = 1; }
message DeleteMailMessageResponse {}

enum CalendarEventType {
  all = 0;
  mail = 1;
  user = 2;
}

message GetCalendarRequest {
  CalendarEventType type = 1;
  int32 years = 2;
}

message CalendarEvent {
  int32 id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  string title = 4;
  CalendarEventType type = 5;
}
message GetCalendarResponse { repeated CalendarEvent calander_event = 1; }

message UpdateCalendarRequest {
  optional int32 id = 1;
  int64 start_time = 2;
  int64 end_time = 3;
  string title = 4;
}

message UpdateCalendarResponse { int32 id = 1; }

message GetMailLabelsRequest {
  repeated string labels =
      1; // 如果填入了任何label，则只返回对应label信息，否则返回所有label
}

message MailLabel {
  string label_id = 1;
  string label_name = 2;
  int32 unread_count = 3;
  int32 total_count = 4;
  bool is_system = 5;
}

message GetMailLabelResponse { repeated MailLabel labels = 1; }

service MessageService {
  rpc GetMailLabels(GetMailLabelsRequest) returns (GetMailLabelResponse);
  rpc GetMailList(GetMailListRequest) returns (GetMailListResponse);
  rpc GetMailMessage(GetMailMessageRequest) returns (GetMailMessageResponse);
  rpc SendMail(SendMailRequest) returns (SendMailRespone);
}

service MailAccount {
  rpc UpdateAccount(UpdateAccountRequest) returns (UpdateAccountResponse);
  rpc GetAccount(GetAccountRequest) returns (GetAccountResponse);
}